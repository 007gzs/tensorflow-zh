{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"dd",
				"dd_keys"
			],
			[
				"k",
				"key"
			],
			[
				"DD",
				"DD_day_car"
			],
			[
				"Dd",
				"DD"
			],
			[
				"che",
				"check_daytime"
			],
			[
				"rec",
				"rec_dict"
			],
			[
				"tim",
				"timestamp"
			],
			[
				"cread",
				"create_ld"
			],
			[
				"fl",
				"flw_v_type"
			],
			[
				"fo",
				"following_dist_data"
			],
			[
				"i",
				"i"
			],
			[
				"re",
				"rec_dict"
			],
			[
				"file",
				"file_dir"
			],
			[
				"d1",
				"dic1"
			],
			[
				"dc",
				"dic0"
			],
			[
				"dic",
				"dic1"
			],
			[
				"d",
				"dic0"
			],
			[
				"pl",
				"pltcolor"
			],
			[
				"plt",
				"plt_color"
			],
			[
				"maj",
				"majority"
			],
			[
				"ca",
				"candidate"
			],
			[
				"m",
				"majority_cnt"
			],
			[
				"cd",
				"candidate"
			],
			[
				"cc",
				"count_candidate"
			],
			[
				"majo",
				"majority_cnt"
			],
			[
				"ba",
				"bat_iter_res"
			],
			[
				"te",
				"temp"
			],
			[
				"ma",
				"max_iter"
			],
			[
				"ite",
				"iter_res"
			],
			[
				"ini",
				"init_res"
			],
			[
				"in",
				"init_sol"
			],
			[
				"sir",
				"sa_iter_res"
			],
			[
				"on",
				"obj_nex"
			],
			[
				"it",
				"iter_res"
			],
			[
				"tem",
				"temp"
			],
			[
				"is",
				"init_sol"
			],
			[
				"c",
				"c"
			],
			[
				"sol",
				"sol_nex"
			],
			[
				"dist",
				"dist_dict"
			],
			[
				"pick",
				"pickle_load"
			],
			[
				"n",
				"num_monve"
			],
			[
				"sa",
				"sa_stopper"
			],
			[
				"t",
				"temp_0"
			],
			[
				"init",
				"init_temp"
			],
			[
				"pr",
				"problem_size"
			],
			[
				"len",
				"line"
			],
			[
				"read",
				"read_file"
			],
			[
				"dis",
				"dist_dict"
			],
			[
				"obj",
				"obj_nex"
			],
			[
				"so",
				"sol_cur"
			],
			[
				"cnt",
				"cnt_bad"
			],
			[
				"cre",
				"create_data"
			],
			[
				"L",
				"Luxury"
			],
			[
				"ac",
				"accepted"
			],
			[
				"per",
				"perm_index"
			],
			[
				"ret",
				"ret_tree"
			],
			[
				"val",
				"value"
			],
			[
				"cl",
				"class_list"
			],
			[
				"sub",
				"sub_labels"
			],
			[
				"spl",
				"split_dataset"
			],
			[
				"v",
				"value"
			],
			[
				"best_f",
				"best_feature_label"
			],
			[
				"best",
				"best_feature"
			],
			[
				"cls",
				"class_cnt"
			],
			[
				"das",
				"dataset"
			],
			[
				"class",
				"class_list"
			],
			[
				"s",
				"split_dataset"
			],
			[
				"ds",
				"dataset"
			],
			[
				"sp",
				"split_dataset"
			],
			[
				"fe",
				"feature_list"
			],
			[
				"dataset",
				"dataset"
			],
			[
				"calc",
				"calc_shannon_entropy"
			],
			[
				"my",
				"my_data"
			],
			[
				"shannon",
				"shannon_entropy"
			],
			[
				"alr",
				"alert"
			],
			[
				"data",
				"dataObj"
			],
			[
				"da",
				"data_jan"
			],
			[
				"pres",
				"presentation"
			],
			[
				"br",
				"batch_result"
			],
			[
				"write",
				"write_update"
			],
			[
				"ge",
				"get"
			],
			[
				"get",
				"get_avgspd"
			],
			[
				"ot",
				"overtime"
			],
			[
				"Max",
				"Maxspd_v"
			],
			[
				"over",
				"overtime"
			],
			[
				"M",
				"Maxspd_c"
			],
			[
				"tr",
				"type_rec"
			],
			[
				"csv",
				"csvdict"
			],
			[
				"time",
				"timerecord"
			],
			[
				"str",
				"str2timestamp"
			],
			[
				"coc",
				"concatenate"
			],
			[
				"gr",
				"group_index"
			],
			[
				"av",
				"avg_ex_tm_slip"
			],
			[
				"ex",
				"ex_tms"
			],
			[
				"exsts",
				"ex_stations"
			],
			[
				"st",
				"station_dict"
			],
			[
				"std",
				"st_dict"
			],
			[
				"th",
				"this_chain"
			],
			[
				"do",
				"double_check"
			],
			[
				"en_s",
				"ent_slip"
			],
			[
				"ent",
				"ent_slip"
			],
			[
				"en",
				"en_tms"
			],
			[
				"ens",
				"en_stations"
			],
			[
				"print_re",
				"print_records"
			],
			[
				"ch",
				"chains"
			],
			[
				"print",
				"print_records"
			],
			[
				"print_rec",
				"print_record"
			],
			[
				"res",
				"results"
			],
			[
				"resul",
				"result"
			],
			[
				"rs",
				"result"
			],
			[
				"sea",
				"search_chain"
			],
			[
				"sear",
				"searchdown"
			],
			[
				"rc",
				"res_chain"
			],
			[
				"next",
				"next_node"
			],
			[
				"nex",
				"next_node"
			],
			[
				"ne",
				"next_node"
			],
			[
				"se",
				"searchdown"
			],
			[
				"searc",
				"search_down"
			],
			[
				"pa",
				"pairs"
			],
			[
				"search",
				"searchdown_pair"
			],
			[
				"iso",
				"isoformat"
			],
			[
				"tst",
				"timestamp"
			],
			[
				"rec0",
				"rec0_midtim"
			],
			[
				"dp",
				"dplt_io"
			],
			[
				"et",
				"entime"
			],
			[
				"dop",
				"dplt_io"
			],
			[
				"cex",
				"curr_ex_plt_forsearch"
			],
			[
				"lo",
				"loaded"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tensorflow_manual_cn.tex",
			"settings":
			{
				"buffer_size": 3932,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n\n% ✠ % ❂ % ✠ % ❂ % ✠ % ❂ % ✠ % ❂ % ✠ % ❂ % ✠ % ❂ % ✠ % ❂ % ✠ % ❂\n\n%✠% \\section{Basic Usage} \\label{basic_usage}\n❂ \\section{使用基础} \\label{basic_usage}\n\n\n%✠% To use TensorFlow you need to understand how TensorFlow:\n\n%✠% \\begin{itemize}\n%✠% \\item Represents computations as graphs.\n%✠% \\item Executes graphs in the context of Sessions.\n%✠% \\item Represents data as tensors.\n%✠% \\item Maintains state with Variables.\n%✠% \\item Uses feeds and fetches to get data into and out of arbitrary operations.\n%✠% \\end{itemize}\n\n❂ 使用TensorFlow之前你需要了解关于TensorFlow的以下基础知识:\n\n\\begin{itemize}\n\\item 使用图(graphs)来表示计算.\n\\item 在\\textbf{\\lstinline{会话(Session)}}中执行图.\n\\item 使用张量(tensors)来代表数据.\n\\item 通过变量(Variables)维护状态.\n\\item 使用 feeds 和 fetches 将数据传入或传出 arbitrary operations.\n\\end{itemize}\n\n%\n%%\n\\subsection{综述}\n\nTensorFlow is a programming system in which you represent computations as graphs. Nodes in the graph are called ops (short for operations). An op takes zero or more \\lstinline{Tensors}, performs some computation, and produces zero or more \\lstinline{Tensors}. A Tensor is a typed multi-dimensional array. For example, you can represent a mini-batch of images as a 4-D array of floating point numbers with dimensions \\lstinline{[batch, height, width, channels]}.\n\nA TensorFlow graph is a description of computations. To compute anything, a graph must be launched in a \\lstinline{Session}. A Session places the graph ops onto \\lstinline{Devices}, such as CPUs or GPUs, and provides methods to execute them. These methods return tensors produced by ops as \\href{http://www.numpy.org/}{numpy} ndarray objects in Python, and as \\lstinline{tensorflow::Tensor} instances in C and C++.\n\n%\n%%\n\\subsection{The computation graph}\n\nTensorFlow programs are usually structured into a construction phase, that assembles a graph, and an execution phase that uses a session to execute ops in the graph.\n\nFor example, it is common to create a graph to represent and train a neural network in the construction phase, and then repeatedly execute a set of training ops in the graph in the execution phase.\n\nTensorFlow can be used from C, C++, and Python programs. It is presently much easier to use the Python library to assemble graphs, as it provides a large set of helper functions not available in the C and C++ libraries.\n\nThe session libraries have equivalent functionalities for the three languages.\n\n\\subsubsection {Building the graph}\nTo build a graph start with ops that do not need any input (source ops), such as Constant, and pass their output to other ops that do computation.\n\nThe ops constructors in the Python library return objects that stand for the output of the constructed ops. You can pass these to other ops constructors to use as inputs.\n\nThe TensorFlow Python library has a default graph to which ops constructors add nodes. The default graph is sufficient for many applications. See the Graph class documentation for how to explicitly manage multiple graphs.\n\n\\begin{lstlisting}\nimport tensorflow as tf\n\n# Create a Constant op that produces a 1x2 matrix.  The op is\n# added as a node to the default graph.\n#\n# The value returned by the constructor represents the output\n# of the Constant op.\nmatrix1 = tf.constant([[3., 3.]])\n\n# Create another Constant that produces a 2x1 matrix.\nmatrix2 = tf.constant([[2.],[2.]])\n\n# Create a Matmul op that takes 'matrix1' and 'matrix2' as inputs.\n# The returned value, 'product', represents the result of the matrix\n# multiplication.\nproduct = tf.matmul(matrix1, matrix2)\n\\end{lstlisting}\n\nThe default graph now has three nodes: two constant() ops and one matmul() op. To actually multiply the matrices, and get the result of the multiplication, you must launch the graph in a session.\n\n\\subsubsection {Launching the graph in a session}\n\nLaunching follows construction. To launch a graph, create a Session object. Without arguments the session constructor launches the default graph.\n\nSee the Session class for the complete session API.\n\n\\begin{lstlisting}\n# Launch the default graph.\nsess = tf.Session()\n\n# To run the matmul op we call the session 'run()' method, passing 'product'\n# which represents the output of the matmul op.  This indicates to the call\n# that we want to get the output of the matmul op back.\n#\n# All inputs needed by the op are run automatically by the session.  They\n# typically are run in parallel.\n#\n# The call 'run(product)' thus causes the execution of threes ops in the\n# graph: the two constants and matmul.\n#\n# The output of the op is returned in 'result' as a numpy `ndarray` object.\nresult = sess.run(product)\nprint(result)\n# ==> [[ 12.]]\n\n# Close the Session when we're done.\nsess.close()\n\\end{lstlisting}\n\nSessions should be closed to release resources. You can also enter a Session with a \"with\" block. The Session closes automatically at the end of the with block.\n\n\\begin{lstlisting}\nwith tf.Session() as sess:\n  result = sess.run([product])\n  print(result)\n\\end{lstlisting}\n\nThe TensorFlow implementation translates the graph definition into executable operations distributed across available compute resources, such as the CPU or one of your computer's GPU cards. In general you do not have to specify CPUs or GPUs explicitly. TensorFlow uses your first GPU, if you have one, for as many operations as possible.\n\nIf you have more than one GPU available on your machine, to use a GPU beyond the first you must assign ops to it explicitly. Use with...Device statements to specify which CPU or GPU to use for operations:\n\n\\begin{lstlisting}\nwith tf.Session() as sess:\n  with tf.device(\"/gpu:1\"):\n    matrix1 = tf.constant([[3., 3.]])\n    matrix2 = tf.constant([[2.],[2.]])\n    product = tf.matmul(matrix1, matrix2)\n    ...\n\\end{lstlisting}\n\nDevices are specified with strings. The currently supported devices are:\n\n\"/cpu:0\": The CPU of your machine.\n\"/gpu:0\": The GPU of your machine, if you have one.\n\"/gpu:1\": The second GPU of your machine, etc.\nSee Using GPUs for more information about GPUs and TensorFlow.\n\n%\n%%\n\\subsection{Interactive Usage}\n\nThe Python examples in the documentation launch the graph with a \\href{https://www.tensorflow.org/versions/master/api_docs/python/client.html#Session}{\\lstinline{Session}} and use the \\href{https://www.tensorflow.org/versions/master/api_docs/python/client.html#Session.run}{\\lstinline{Session.run()}} method to execute operations.\n\nFor ease of use in interactive Python environments, such as \\href{http://ipython.org/}{\\lstinline{IPython}} you can instead use the \\href{https://www.tensorflow.org/versions/master/api_docs/python/client.html#InteractiveSession}{\\lstinline{InteractiveSession}} class, and the \\href{https://www.tensorflow.org/versions/master/api_docs/python/framework.html#Tensor.eval}{\\lstinline{Tensor.eval()}} and \\href{https://www.tensorflow.org/versions/master/api_docs/python/framework.html#Operation.run}{\\lstinline{Operation.run()}} methods. This avoids having to keep a variable holding the session.\n\n\\begin{lstlisting}\n# Enter an interactive TensorFlow Session.\nimport tensorflow as tf\nsess = tf.InteractiveSession()\n\nx = tf.Variable([1.0, 2.0])\na = tf.constant([3.0, 3.0])\n\n# Initialize 'x' using the run() method of its initializer op.\nx.initializer.run()\n\n# Add an op to subtract 'a' from 'x'.  Run it and print the result\nsub = tf.sub(x, a)\nprint(sub.eval())\n# ==> [-2. -1.]\n\n# Close the Session when we're done.\nsess.close()\n\\end{lstlisting}\n\n%\n%%\n\\subsection{Tensors}\nTensorFlow programs use a tensor data structure to represent all data -- only tensors are passed between operations in the computation graph. You can think of a TensorFlow tensor as an n-dimensional array or list. A tensor has a static type, a rank, and a shape. To learn more about how TensorFlow handles these concepts, see the \\href{https://www.tensorflow.org/versions/master/resources/dims_types.html}{Rank, Shape, and Type} reference.\n\n%\n%%\n\\subsection{Variables}\nVariables maintain state across executions of the graph. The following example shows a variable serving as a simple counter. See \\href{https://www.tensorflow.org/versions/master/how_tos/variables/index.html}{Variables} for more details.\n\n\\begin{lstlisting}\n# Create a Variable, that will be initialized to the scalar value 0.\nstate = tf.Variable(0, name=\"counter\")\n\n# Create an Op to add one to `state`.\n\none = tf.constant(1)\nnew_value = tf.add(state, one)\nupdate = tf.assign(state, new_value)\n\n# Variables must be initialized by running an `init` Op after having\n# launched the graph.  We first have to add the `init` Op to the graph.\ninit_op = tf.initialize_all_variables()\n\n# Launch the graph and run the ops.\nwith tf.Session() as sess:\n  # Run the 'init' op\n  sess.run(init_op)\n  # Print the initial value of 'state'\n  print(sess.run(state))\n  # Run the op that updates 'state' and print 'state'.\n  for _ in range(3):\n    sess.run(update)\n    print(sess.run(state))\n\n# output:\n\n# 0\n# 1\n# 2\n# 3\n\\end{lstlisting}\n\nThe \\lstinline{assign()} operation in this code is a part of the expression graph just like the \\lstinline{add()} operation, so it does not actually perform the assignment until \\lstinline{run()} executes the expression.\n\nYou typically represent the parameters of a statistical model as a set of Variables. For example, you would store the weights for a neural network as a tensor in a Variable. During training you update this tensor by running a training graph repeatedly.\n\n\n%\n%%\n\\subsection{Fetches}\n\nTo fetch the outputs of operations, execute the graph with a \\lstinline{run()} call on the \\lstinline{Session} object and pass in the tensors to retrieve. In the previous example we fetched the single node \\lstinline{state}, but you can also fetch multiple tensors:\n\n\\begin{lstlisting}\ninput1 = tf.constant(3.0)\ninput2 = tf.constant(2.0)\ninput3 = tf.constant(5.0)\nintermed = tf.add(input2, input3)\nmul = tf.mul(input1, intermed)\n\nwith tf.Session() as sess:\n  result = sess.run([mul, intermed])\n  print(result)\n\n# output:\n# [array([ 21.], dtype=float32), array([ 7.], dtype=float32)]\n\\end{lstlisting}\n\nAll the ops needed to produce the values of the requested tensors are run once (not once per requested tensor).\n\n%\n%%\n\\subsection{Feeds}\nThe examples above introduce tensors into the computation graph by storing them in \\lstinline{Constants} and \\lstinline{Variables}. TensorFlow also provides a feed mechanism for patching a tensor directly into any operation in the graph.\n\nA feed temporarily replaces the output of an operation with a tensor value. You supply feed data as an argument to a \\lstinline{run()} call. The feed is only used for the run call to which it is passed. The most common use case involves designating specific operations to be \"feed\" operations by using \\lstinline{tf.placeholder()} to create them:\n\n\\begin{lstlisting}\ninput1 = tf.placeholder(tf.float32)\ninput2 = tf.placeholder(tf.float32)\noutput = tf.mul(input1, input2)\n\nwith tf.Session() as sess:\n  print(sess.run([output], feed_dict={input1:[7.], input2:[2.]}))\n\n# output:\n# [array([ 14.], dtype=float32)]\n\\end{lstlisting}\n\nA \\lstinline{placeholder()} operation generates an error if you do not supply a feed for it. See the \\hyperref[minist_tf]{MNIST fully-connected feed tutorial} (\\href{https://tensorflow.googlesource.com/tensorflow/+/master/tensorflow/g3doc/tutorials/mnist/fully_connected_feed.py}{source code}) for a larger-scale example of feeds.\n\n%%%%  # 基本使用 <a class=\"md-anchor\" id=\"AUTOGENERATED-basic-usage\"></a>\n%%%%\n%%%%  使用 TensorFlow, 你必须明白 TensorFlow:\n%%%%\n%%%%  * 使用图 (graph) 来表示计算任务.\n%%%%  * 在被称之为 `会话 (Session)` 的上下文 (context) 中执行图.\n%%%%  * 使用 tensor 表示数据.\n%%%%  * 通过 `变量 (Variable)` 维护状态.\n%%%%  * 使用 feed 和 fetch 为任意操作输入和输出数据.\n%%%%\n%%%%  ## 综述 <a class=\"md-anchor\" id=\"AUTOGENERATED-overview\"></a>\n%%%%\n%%%%  TensorFlow 是一个编程系统, 使用图来表示计算任务. 图中的节点被称之为 *op*\n%%%%  (operation 的缩写). 一个 op 获得 0 个或多个 `Tensor`, 执行计算,\n%%%%  产生 0 个或多个 `Tensor `. 每个 Tensor 是一个类型化的多维数组.\n%%%%  例如, 你可以将一小组图像集表示为一个四维浮点数数组,\n%%%%  这四个维度分别是 `[batch, height, width, channels]`.\n%%%%\n%%%%  一个 TensorFlow 图*描述*了计算的过程. 为了进行计算, 图必须在 `会话` 里被启动.\n%%%%  `会话` 将图的 op 分发到诸如 CPU 或 GPU 之类的 `设备` 上, 同时提供执行 op 的方法.\n%%%%  这些方法执行后, 将产生的 tensor 返回. 在 Python 语言中, 返回的 tensor 是\n%%%%  [numpy](http://www.numpy.org) `ndarray` 对象; 在 C 和 C++ 语言中, 返回的 tensor 是\n%%%%   `tensorflow::Tensor` 实例.\n%%%%\n%%%%  ## 计算图 <a class=\"md-anchor\" id=\"AUTOGENERATED-the-computation-graph\"></a>\n%%%%\n%%%%  TensorFlow 程序通常被组织成一个构建阶段, 和一个执行阶段. 在构建阶段, op 的执行步骤\n%%%%  被描述成一个图. 在执行阶段, 使用会话执行执行图中的 op.\n%%%%\n%%%%  例如, 通常在构建阶段创建一个图来表示和训练神经网络, 然后在执行阶段反复执行图中的训练 op.\n%%%%\n%%%%  TensorFlow 支持 C, C++, Python 编程语言. 目前, TensorFlow 的 Python 库更加易用,\n%%%%  它提供了大量的辅助函数来简化构建图的工作, 这些函数尚未被 C 和 C++ 库支持.\n%%%%\n%%%%  三种语言的会话库 (session libraries) 是一致的.\n%%%%\n%%%%  ### 构建图 <a class=\"md-anchor\" id=\"AUTOGENERATED-building-the-graph\"></a>\n%%%%\n%%%%  构建图的第一步, 是创建源 op (source op). 源 op 不需要任何输入, 例如 `常量 (Constant)`. 源 op 的输出被传递给其它 op 做运算.\n%%%%\n%%%%  Python 库中, op 构造器的返回值代表被构造出的 op 的输出, 这些返回值可以传递给其它\n%%%%  op 构造器作为输入.\n%%%%\n%%%%  TensorFlow Python 库有一个*默认图 (default graph)*, op 构造器可以为其增加节点. 这个默认图对\n%%%%  许多程序来说已经足够用了. 阅读 [Graph 类](../api_docs/python/framework.md#Graph) 文档\n%%%%  来了解如何管理多个图.\n%%%%\n%%%%  ```python\n%%%%  import tensorflow as tf\n%%%%\n%%%%  # 创建一个常量 op, 产生一个 1x2 矩阵. 这个 op 被作为一个节点\n%%%%  # 加到默认图中.\n%%%%  #\n%%%%  # 构造器的返回值代表该常量 op 的返回值.\n%%%%  matrix1 = tf.constant([[3., 3.]])\n%%%%\n%%%%  # 创建另外一个常量 op, 产生一个 2x1 矩阵.\n%%%%  matrix2 = tf.constant([[2.],[2.]])\n%%%%\n%%%%  # 创建一个矩阵乘法 matmul op , 把 'matrix1' 和 'matrix2' 作为输入.\n%%%%  # 返回值 'product' 代表矩阵乘法的结果.\n%%%%  product = tf.matmul(matrix1, matrix2)\n%%%%  ```\n%%%%\n%%%%  默认图现在有三个节点, 两个 `constant()` op, 和一个`matmul()` op. 为了真正进行矩阵相乘运算, 并得到矩阵乘法的\n%%%%  结果, 你必须在会话里启动这个图.\n%%%%\n%%%%  ### 在一个会话中启动图 <a class=\"md-anchor\" id=\"AUTOGENERATED-launching-the-graph-in-a-session\"></a>\n%%%%\n%%%%  构造阶段完成后, 才能启动图. 启动图的第一步是创建一个 `Session` 对象, 如果无任何创建参数,\n%%%%  会话构造器将启动默认图.\n%%%%\n%%%%  欲了解完整的会话 API, 请阅读[Session 类](../api_docs/python/client.md#session-management).\n%%%%\n%%%%  ```python\n%%%%  # 启动默认图.\n%%%%  sess = tf.Session()\n%%%%\n%%%%  # 调用 sess 的 'run()' 方法来执行矩阵乘法 op, 传入 'product' 作为该方法的参数.\n%%%%  # 上面提到, 'product' 代表了矩阵乘法 op 的输出, 传入它是向方法表明, 我们希望取回\n%%%%  # 矩阵乘法 op 的输出.\n%%%%  #\n%%%%  # 整个执行过程是自动化的, 会话负责传递 op 所需的全部输入. op 通常是并发执行的.\n%%%%  #\n%%%%  # 函数调用 'run(product)' 触发了图中三个 op (两个常量 op 和一个矩阵乘法 op) 的执行.\n%%%%  #\n%%%%  # 返回值 'result' 是一个 numpy `ndarray` 对象.\n%%%%  result = sess.run(product)\n%%%%  print result\n%%%%  # ==> [[ 12.]]\n%%%%\n%%%%  # 任务完成, 关闭会话.\n%%%%  sess.close()\n%%%%  ```\n%%%%\n%%%%  `Session` 对象在使用完后需要关闭以释放资源. 除了显式调用 close 外, 也可以使用 \"with\" 代码块\n%%%%  来自动完成关闭动作.\n%%%%\n%%%%  ```python\n%%%%  with tf.Session() as sess:\n%%%%    result = sess.run([product])\n%%%%    print result\n%%%%  ```\n%%%%\n%%%%  在实现上, TensorFlow 将图形定义转换成分布式执行的操作, 以充分利用可用的计算资源(如 CPU\n%%%%  或 GPU). 一般你不需要显式指定使用 CPU 还是 GPU, TensorFlow 能自动检测. 如果检测到 GPU, TensorFlow\n%%%%  会尽可能地利用找到的第一个 GPU 来执行操作.\n%%%%\n%%%%  如果机器上有超过一个可用的 GPU, 除第一个外的其它 GPU 默认是不参与计算的. 为了让 TensorFlow\n%%%%  使用这些 GPU, 你必须将 op 明确指派给它们执行. `with...Device` 语句用来指派特定的 CPU 或 GPU\n%%%%  执行操作:\n%%%%\n%%%%  ```python\n%%%%  with tf.Session() as sess:\n%%%%    with tf.device(\"/gpu:1\"):\n%%%%      matrix1 = tf.constant([[3., 3.]])\n%%%%      matrix2 = tf.constant([[2.],[2.]])\n%%%%      product = tf.matmul(matrix1, matrix2)\n%%%%      ...\n%%%%  ```\n%%%%\n%%%%  设备用字符串进行标识. 目前支持的设备包括:\n%%%%\n%%%%  *  `\"/cpu:0\"`: 机器的 CPU.\n%%%%  *  `\"/gpu:0\"`: 机器的第一个 GPU, 如果有的话.\n%%%%  *  `\"/gpu:1\"`: 机器的第二个 GPU, 以此类推.\n%%%%\n%%%%  阅读[使用GPU](tensorflow-zh/SOURCE/how_tos/using_gpu.md)章节, 了解 TensorFlow GPU 使用的更多信息.\n%%%%\n%%%%  ## 交互式使用 <a class=\"md-anchor\" id=\"AUTOGENERATED-interactive-usage\"></a>\n%%%%\n%%%%  文档中的 Python 示例使用一个会话 [`Session`](../api_docs/python/client.md#Session) 来\n%%%%  启动图, 并调用 [`Session.run()`](../api_docs/python/client.md#Session.run) 方法执行操作.\n%%%%\n%%%%  为了便于使用诸如 [IPython](http://ipython.org) 之类的 Python 交互环境, 可以使用\n%%%%  [`InteractiveSession`](../api_docs/python/client.md#InteractiveSession) 代替\n%%%%  `Session` 类, 使用 [`Tensor.eval()`](../api_docs/python/framework.md#Tensor.eval)\n%%%%  和 [`Operation.run()`](../api_docs/python/framework.md#Operation.run) 方法代替\n%%%%  `Session.run()`. 这样可以避免使用一个变量来持有会话.\n%%%%\n%%%%  ```python\n%%%%  # 进入一个交互式 TensorFlow 会话.\n%%%%  import tensorflow as tf\n%%%%  sess = tf.InteractiveSession()\n%%%%\n%%%%  x = tf.Variable([1.0, 2.0])\n%%%%  a = tf.constant([3.0, 3.0])\n%%%%\n%%%%  # 使用初始化器 initializer op 的 run() 方法初始化 'x'\n%%%%  x.initializer.run()\n%%%%\n%%%%  # 增加一个减法 sub op, 从 'x' 减去 'a'. 运行减法 op, 输出结果\n%%%%  sub = tf.sub(x, a)\n%%%%  print sub.eval()\n%%%%  # ==> [-2. -1.]\n%%%%  ```\n%%%%\n%%%%  ## Tensor <a class=\"md-anchor\" id=\"AUTOGENERATED-tensors\"></a>\n%%%%\n%%%%  TensorFlow 程序使用 tensor 数据结构来代表所有的数据, 计算图中, 操作间传递的数据都是 tensor.\n%%%%  你可以把 TensorFlow tensor 看作是一个 n 维的数组或列表. 一个 tensor 包含一个静态类型 rank, 和\n%%%%  一个 shape. 想了解 TensorFlow 是如何处理这些概念的, 参见\n%%%%  [Rank, Shape, 和 Type](../resources/dims_types.md).\n%%%%\n%%%%  ## 变量 <a class=\"md-anchor\" id=\"AUTOGENERATED-variables\"></a>\n%%%%\n%%%%  [Variables](../how_tos/variables/index.md) for more details.\n%%%%  变量维护图执行过程中的状态信息. 下面的例子演示了如何使用变量实现一个简单的计数器. 参见\n%%%%  [变量](tensorflow-zh/how_tos/variables.md) 章节了解更多细节.\n%%%%\n%%%%  ```python\n%%%%  # 创建一个变量, 初始化为标量 0.\n%%%%  state = tf.Variable(0, name=\"counter\")\n%%%%\n%%%%  # 创建一个 op, 其作用是使 state 增加 1\n%%%%\n%%%%  one = tf.constant(1)\n%%%%  new_value = tf.add(state, one)\n%%%%  update = tf.assign(state, new_value)\n%%%%\n%%%%  # 启动图后, 变量必须先经过`初始化` (init) op 初始化,\n%%%%  # 首先必须增加一个`初始化` op 到图中.\n%%%%  init_op = tf.initialize_all_variables()\n%%%%\n%%%%  # 启动图, 运行 op\n%%%%  with tf.Session() as sess:\n%%%%    # 运行 'init' op\n%%%%    sess.run(init_op)\n%%%%    # 打印 'state' 的初始值\n%%%%    print sess.run(state)\n%%%%    # 运行 op, 更新 'state', 并打印 'state'\n%%%%    for _ in range(3):\n%%%%      sess.run(update)\n%%%%      print sess.run(state)\n%%%%\n%%%%  # 输出:\n%%%%\n%%%%  # 0\n%%%%  # 1\n%%%%  # 2\n%%%%  # 3\n%%%%  ```\n%%%%\n%%%%  代码中 `assign()` 操作是图所描绘的表达式的一部分, 正如 `add()` 操作一样. 所以在调用 `run()`\n%%%%  执行表达式之前, 它并不会真正执行赋值操作.\n%%%%\n%%%%  通常会将一个统计模型中的参数表示为一组变量. 例如, 你可以将一个神经网络的权重作为某个变量存储在一个 tensor 中.\n%%%%  在训练过程中, 通过重复运行训练图, 更新这个 tensor.\n%%%%\n%%%%  ## Fetch <a class=\"md-anchor\" id=\"AUTOGENERATED-fetches\"></a>\n%%%%\n%%%%  为了取回操作的输出内容, 可以在使用 `Session` 对象的 `run()` 调用 执行图时, 传入一些 tensor,\n%%%%  这些 tensor 会帮助你取回结果. 在之前的例子里, 我们只取回了单个节点 `state`, 但是你也可以取回多个\n%%%%  tensor:\n%%%%\n%%%%\n%%%%  ```python\n%%%%  input1 = tf.constant(3.0)\n%%%%  input2 = tf.constant(2.0)\n%%%%  input3 = tf.constant(5.0)\n%%%%  intermed = tf.add(input2, input3)\n%%%%  mul = tf.mul(input1, intermed)\n%%%%\n%%%%  with tf.Session():\n%%%%    result = sess.run([mul, intermed])\n%%%%    print result\n%%%%\n%%%%  # 输出:\n%%%%  # [array([ 21.], dtype=float32), array([ 7.], dtype=float32)]\n%%%%  ```\n%%%%\n%%%%  需要获取的多个 tensor 值，在 op 的一次运行中一起获得（而不是逐个去获取 tensor）。\n%%%%\n%%%%  ## Feed <a class=\"md-anchor\" id=\"AUTOGENERATED-feeds\"></a>\n%%%%\n%%%%  上述示例在计算图中引入了 tensor, 以常量或变量的形式存储. TensorFlow 还提供了 feed 机制, 该机制\n%%%%  可以临时替代图中的任意操作中的 tensor	可以对图中任何操作提交补丁, 直接插入一个 tensor.\n%%%%\n%%%%  feed 使用一个 tensor 值临时替换一个操作的输出结果. 你可以提供 feed 数据作为 `run()` 调用的参数.\n%%%%  feed 只在调用它的方法内有效, 方法结束, feed 就会消失. 最常见的用例是将某些特殊的操作指定为 \"feed\" 操作,\n%%%%  标记的方法是使用 tf.placeholder() 为这些操作创建占位符.\n%%%%\n%%%%  ```python\n%%%%\n%%%%  input1 = tf.placeholder(tf.types.float32)\n%%%%  input2 = tf.placeholder(tf.types.float32)\n%%%%  output = tf.mul(input1, input2)\n%%%%\n%%%%  with tf.Session() as sess:\n%%%%    print sess.run([output], feed_dict={input1:[7.], input2:[2.]})\n%%%%\n%%%%  # 输出:\n%%%%  # [array([ 14.], dtype=float32)]\n%%%%  ```\n%%%%\n%%%%  for a larger-scale example of feeds.\n%%%%  如果没有正确提供 feed, `placeholder()` 操作将会产生错误.\n%%%%  [MNIST 全连通 feed 教程](tensorflow-zh/SOURCE/tutorials/mnist_tf.md)\n%%%%  ([source code](https://tensorflow.googlesource.com/tensorflow/+/master/tensorflow/g3doc/tutorials/mnist/fully_connected_feed.py))\n%%%%  给出了一个更大规模的使用 feed 的例子.\n%%%%\n%%%%  > 原文：[Basic Usage](http://tensorflow.org/get_started/basic_usage.md)  翻译：[@doc001](https://github.com/PFZheng)  校对：[@yangtze](https://github.com/sstruct)\n%%%%\n",
			"file": "get_started/sec_1_3_basic_usage.tex",
			"file_size": 24275,
			"file_write_time": 130956140296371610,
			"settings":
			{
				"buffer_size": 19899,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"git log",
				"Git: Log All"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"RER",
				"SublimeREPL: R"
			],
			[
				"REPLp",
				"SublimeREPL: Python"
			],
			[
				"REPL",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"RE",
				"SublimeREPL: Python"
			],
			[
				"repl",
				"SublimeREPL: Python"
			],
			[
				"rep",
				"SublimeREPL: Python"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"REPLR",
				"SublimeREPL: R"
			],
			[
				"ssjs",
				"Set Syntax: JavaScript"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git loga",
				"Git: Log All"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"git br",
				"Git: New Branch"
			],
			[
				"git ",
				"Git: Commit history"
			],
			[
				"packinst",
				"Package Control: Install Package"
			],
			[
				"packcinst",
				"Package Control: Install Package"
			],
			[
				"git gr",
				"Git: Graph All"
			],
			[
				"gitlog",
				"Git: Log Current File"
			],
			[
				"gitsta",
				"Git: Status"
			],
			[
				"paccin",
				"Package Control: Install Package"
			],
			[
				"pacins",
				"Package Control: Install Package"
			],
			[
				"ss",
				"Set Syntax: LaTeX Log"
			],
			[
				"ssmt",
				"Set Syntax: TeX Math"
			],
			[
				"sspe",
				"Set Syntax: Perl"
			],
			[
				"sssq",
				"Set Syntax: SQL"
			],
			[
				"ssC",
				"Set Syntax: CSS"
			],
			[
				"ssmad",
				"Set Syntax: Markdown"
			],
			[
				"ssja",
				"Set Syntax: Java"
			],
			[
				"ssht",
				"Set Syntax: HTML"
			],
			[
				"ssRC",
				"Set Syntax: R Console"
			],
			[
				"ssp",
				"Set Syntax: Python"
			],
			[
				"pain",
				"Package Control: Install Package"
			],
			[
				"pi",
				"Package Control: Install Package"
			],
			[
				"sspy",
				"Set Syntax: Python"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"intalpck",
				"Package Control: Install Package"
			],
			[
				"sssql",
				"Set Syntax: SQL (Rails)"
			],
			[
				"sssca",
				"Set Syntax: Scala"
			],
			[
				"ssql",
				"Set Syntax: SQL"
			],
			[
				"replpy",
				"SublimeREPL: Python"
			],
			[
				"package control ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"package inst",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package control insta",
				"Preferences: Package Control Settings – Default"
			],
			[
				"sstex",
				"Set Syntax: TeX"
			],
			[
				"stsytex",
				"Set Syntax: LaTeX"
			],
			[
				"remove P",
				"Package Control: Remove Package"
			],
			[
				"pyth",
				"SublimeREPL: Python - Sublime Text Console"
			],
			[
				"mini",
				"View: Toggle Minimap"
			],
			[
				"minim",
				"View: Toggle Minimap"
			],
			[
				"paci",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			],
			[
				"pystc",
				"SublimeREPL: Python - Sublime Text Console"
			],
			[
				"python",
				"SublimeREPL: Python - Sublime Text Console"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"remove Package",
				"Package Control: Remove Package"
			],
			[
				"inst pcg",
				"Package Control: Install Package"
			],
			[
				"instpkg",
				"Package Control: Install Package"
			],
			[
				"install pckg",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"pci",
				"Package Control: Install Package"
			],
			[
				"ssrb",
				"Set Syntax: Ruby"
			],
			[
				"setting",
				"Preferences: Settings - User"
			],
			[
				"csv",
				"Emmet: Reflect CSS Value"
			],
			[
				"fold",
				"Code Folding: Unfold All"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"ssltex",
				"Set Syntax: LaTeX"
			],
			[
				"install package ",
				"Package Control: Install Package"
			],
			[
				"sslatex",
				"Set Syntax: LaTeX"
			],
			[
				"code folding",
				"Code Folding: Fold Tag Attributes"
			],
			[
				"ww",
				"Word Wrap: Toggle"
			],
			[
				"wordwa",
				"Word Wrap: Toggle"
			],
			[
				"package control list",
				"Package Control: List Packages"
			],
			[
				"repy",
				"SublimeREPL: Python"
			],
			[
				"reppp",
				"SublimeREPL: Python - PDB current file"
			],
			[
				"sspyth",
				"Set Syntax: Python"
			],
			[
				"st s",
				"Set Syntax: Plain Text"
			],
			[
				"prefer",
				"Preferences: Browse Packages"
			],
			[
				"package control",
				"Package Control: Add Channel"
			],
			[
				"fold ",
				"Code Folding: Unfold All"
			],
			[
				"sspo",
				"Set Syntax: Python"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 198.0,
		"history":
		[
			"git ",
			"exit()",
			"print (a)",
			"a = 12",
			"a ",
			"help",
			"dir",
			"ls",
			"git",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"sumtrapdf",
			"print (a)",
			"a = 10",
			"a",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/codes_sync/tensorflow/tensorflow_zh",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/get_started",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/how_tos",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tutorials"
	],
	"file_history":
	[
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/get_started/sec_1_2_os_setup.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tutorials/sec_2_2_minist_beginners.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/get_started/sec_1_1_introduction.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tutorials/sec_2_4_.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/get_started/sec_1_3_basic_usage.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tutorials/sec_2_1_overview.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/how_tos/sec_3_1_variables.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tutorials/sec_2_3_minist_pros.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tensorflow_manual_translation.sublime-project",
		"/D/meth_sync/jsptpd/[151221] 南京市 科技进步奖 申报/JSPTPD 高速公路车辆行为分析系统v0/软件著作权 申请/source_code_hardcopy/source_codes.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tensorflow_manual_cn.tex",
		"/D/SEIKA_sync/JSPTPD/逃费专利申请/patant_application.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tensorflow_manual_cn - Copy.tex",
		"/C/Users/Seika/Desktop/tex/tensorflow_manual_cn.tex",
		"/D/codes_sync/tensorflow/tensorflow_zh/tex/tensorflow_manual_zh.tex",
		"/D/codes_sync/TeX.works/Academic CV/version_20140902/JQi_CV.tex",
		"/D/codes_sync/TeX.works/jsptpd_template/jsptpd_tex_template.tex",
		"/D/codes_sync/TeX.works/jsptpd_template/jsptpd_tex_template.toc",
		"/D/myfonts.txt",
		"/D/SEIKA_sync/JSPTPD/12345_proj/ana_dscp/jsptpd_tex_template.tex",
		"/D/SEIKA_sync/JSPTPD/12345_proj/ana_dscp/jsptpd_tex_template.toc",
		"/D/SEIKA_sync/Project_X/remote sensing/JQi_CV_rs/JQi_CV.tex",
		"/D/Codes_sync/TeX.works/cjfr/portfolio_model_seed_deployment/portfolio_model_seed_deployment.tex",
		"/D/Codes_sync/TeX.works/中文字体案例/sample.tex",
		"/D/迅雷下载/川井郁子(Ikuko.Kawai).-.[Nature].专辑.(FLAC).cue",
		"/E/YanChenData/DBETC1600112/data/dbo.SEXIT2009021600112.Table.sql",
		"/E/YanChenData/DBETC1600112/data/dbo.SEXIT2008121600112.Table.sql",
		"/E/YanChenData/DBETC1600112/data/dbo.ESplit20091600112.Table.sql",
		"/E/YanChenData/DBETC1600112/data/dbo.ESplit20081600112.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.SEXIT2009011600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.SEntry2011041600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.ESplit20111600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.ESplit20091600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.ESplit20081600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.ETCGResult201320131600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.EGRAYCARD2011061600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.EGRAYCARD2011051600101.Table.sql",
		"/E/YanChenData/DBETC1600101/表结构/dbo.EData20131600101.Table.sql",
		"/E/YanChenData/DBETC1600101/表结构/dbo.EData20141600101.Table.sql",
		"/E/YanChenData/DBETC1600101/表结构/dbo.Egraycard2009021600101.Table.sql",
		"/E/YanChenData/DBETC1600101/表结构/dbo.Egraycard2009051600101.Table.sql",
		"/E/YanChenData/DBETC1600101/data/dbo.EData20131600101.Table.sql",
		"/D/迅雷下载/Dido.-.[Life.for.Rent].专辑.(APE).cue",
		"/D/SEIKA_sync/Python.Works/jsptpd/x150701/proc.py",
		"/D/SEIKA_sync/PROGRAM/SublimeText_x64_3059/Data/Packages/SublimeREPL/config/Python/Main.sublime-menu",
		"/D/SEIKA_sync/PROGRAM/SublimeText_x64_3059/Data/Packages/User/Default (Windows).sublime-keymap",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/random_data_choose.py",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/sample_analysis.py",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/toy.py",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/plot_sample.py",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/scatter_3d.py",
		"/D/SEIKA_sync/PROGRAM/SublimeText_x64_3059/Data/Packages/Default/Default (Windows).sublime-keymap",
		"/D/迅雷下载/texlive2015.iso.md5",
		"/C/Users/seika/Downloads/texlive2015.iso.md5",
		"/D/SEIKA_sync/R.Works/cousera/R_ex1/pollutantmean.R",
		"/D/迅雷下载/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD1)].ALBUM/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD1)].ALBUM.CUE",
		"/D/迅雷下载/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD1)].ALBUM/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD2)].ALBUM.CUE",
		"/D/迅雷下载/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD1)].ALBUM/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD2)].ALBUM.cue",
		"/D/迅雷下载/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD1)].ALBUM.cue",
		"/D/迅雷下载/Vladimir.Ashkenazy.-.[Rachmaninov.4.Piano.Concertos(CD1)].专辑.(APE).cue",
		"/F/Doujin.同人音樂/SWING.HOLIC/SH.fpl",
		"/D/SEIKA_sync/Python.Works/MDPI/MonthlyReport/raw_SQLXCL_processor_v2.py",
		"/D/SEIKA_sync/Python.Works/MDPI/MonthlyReport/MRPLOT.py",
		"/D/SEIKA_sync/Python.Works/MDPI/MonthlyReport/BarChart.py",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/DD_filter.py",
		"/D/SEIKA_sync/PROGRAM/Sublime Text Build 3083 x64 for R/Data/Packages/User/Preferences.sublime-settings",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/plot_sample",
		"/C/Users/seika/Desktop/hosts",
		"/C/Windows/System32/drivers/etc/hosts",
		"/C/Windows/System32/drivers/etc/services",
		"/C/Windows/System32/drivers/etc/protocol",
		"/C/Windows/System32/drivers/etc/lmhosts.sam",
		"/C/Windows/System32/drivers/etc/networks",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/data/[201504]_3.txt",
		"/D/SEIKA_sync/Python.Works/jsptpd/vehicle_behavior/data/[201504]_2.txt",
		"/D/SEIKA_sync/PROGRAM/SublimeText_x64_3059/Data/Packages/User/SublimeREPL.sublime-settings",
		"/E/TEMP/[201504]_9.txt",
		"/E/TEMP/[201504]_10.txt",
		"/E/TEMP/[201504]_11.txt",
		"/E/TEMP/[201504]_12.txt",
		"/E/TEMP/[201504]_3.txt",
		"/E/TEMP/[201504]_2.txt",
		"/D/SEIKA_sync/PROGRAM/SublimeText_x64_3059/Data/Packages/User/Word Highlight.sublime-settings",
		"/E/TEMP/[201504]_1.txt",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/simulated annealing/create_dist_dict.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/simulated annealing/sa.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/decision_tree/decision_tree.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/seika_ml_in_action.sublime-project",
		"/E/Music/[C87]/(C87)(同人音楽)(東方)[Amateras Records] Unrequited Hearts (flac)/Amateras Records - Unrequited Hearts.tta.cue",
		"/D/SEIKA_sync/JSPTPD/亚太智能交通论坛2015参会展示内容/脚本润色/4业务支撑/新建文本文档.txt",
		"/D/SEIKA_sync/Python.Works/SEIKA.LIB/SEIKA.pth",
		"/D/SEIKA.sync/Python.Works/SEIKA.LIB/SEIKA.pth",
		"/F/Projects/nh_prj.fee_cheater_hunter/2 pro_dual_plates_comb_check.py",
		"/F/Projects/nh_prj.fee_cheater_hunter/1 data cleanning proc.py",
		"/C/Users/Seika/Desktop/qa194.tsp",
		"/D/SEIKA.sync/Python.Works/SEIKA.LIB/csvdict.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/decision_tree/CART/cart_decision_tree.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/decision_tree/CART/regTree.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/simulated annealing/ca4663.tsp",
		"/C/Users/Seika/Downloads/ca4663.tsp",
		"/C/Users/Seika/Downloads/world.tsp/world.tsp",
		"/D/SEIKA.sync/Java.Works/SAA/模拟退火.java",
		"/D/SEIKA.sync/JSPTPD/亚太智能交通论坛2015参会展示内容/qj/业务支撑及协同平台素材及解说词/业务支撑.txt",
		"/D/SEIKA.sync/Java.Works/SAA/SimulatedAnnealing.java",
		"/D/SEIKA.sync/Java.Works/SAA/模拟退火.class",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/decision_tree/plot_tree.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/decision_tree/cart/cart_decision_tree.py",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/A 60-day plan of learning data mining",
		"/D/SEIKA.sync/Python.Works/machine_learning_in_action/simulated annealing/sa",
		"/D/SEIKA.sync/Python.Works/MLinAct/decision_tree/decision_tree.py",
		"/D/SEIKA.sync/Python.Works/MLinAct/kNN.py",
		"/D/SEIKA.sync/Python.Works/MLinAct/knn.py",
		"/D/SEIKA.sync/TeX.works/cjfr/portfolio_model_seed_deployment/portfolio_model_seed_deployment.tex",
		"/D/SEIKA.sync/Seika.TEMP/chen_car_mark_every_lane_count.txt",
		"/D/PROGRAM.sync/SublimeText_x64_3059/Data/Packages/User/Preferences.sublime-settings",
		"/D/SEIKA.sync/Project_X/remote sensing/profs_provided_by_Dr_ms_li",
		"/D/SEIKA.sync/Project_X/remote sensing/JQi_CV_rs/JQi_CV.tex",
		"/D/SEIKA.sync/Project_X/remote sensing/JQi_CV.tex",
		"/D/SEIKA.sync/TeX.works/cjfr/portfolio_model_seed_deployment/citations.bib",
		"/D/SEIKA.sync/TeX.works/cjfr/portfolio_model_seed_deployment/portfolio_model_seed_deployment.bbl",
		"/C/Users/Seika/Desktop/test/url_citation_minimal/test.tex",
		"/D/PROGRAM.sync/SublimeText_x64_3059/Data/Packages/User/LaTeX.sublime-settings",
		"/D/SEIKA.sync/Python.Works/seika_scriber/ss1.py",
		"/D/SEIKA.sync/Python.Works/MDPI/WOS.crunch/py_play.py",
		"/D/SEIKA.sync/Python.Works/MDPI/Sagitt.prj/Sagitt.py",
		"/D/SEIKA.sync/Python.Works/MDPI/ProcList.prj/HIP.py",
		"/D/SEIKA.sync/Python.Works/MDPI/GoogleAnalytics/GA_doi.py",
		"/D/SEIKA.sync/Python.Works/LearningPython/lec5.py"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 114.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"%✠%",
			"%\n%%",
			"\\section",
			"\\item",
			"hyper",
			"\\subsection",
			"{",
			"###",
			"`",
			"## ",
			"`",
			"cross_entropy",
			"`",
			"###",
			"\\end{quote}",
			"\\begin{quote}",
			"}",
			",",
			"Tensors",
			"spread",
			"chapter",
			"section",
			"chapter",
			"`",
			"```",
			"```python",
			"`",
			"_",
			"\\subsubsubsection",
			"\\subsubsection",
			"\\subsection",
			"\\section",
			"subsubsubsection",
			"%",
			"\\includegraphics",
			"subsection",
			"co_comment",
			"mygray",
			"mygreen",
			"\\s",
			"综述}",
			"60000",
			"links",
			"document",
			"repl_python",
			"F5",
			"max",
			"DD[key]",
			"blue",
			"yellow",
			"green",
			"flw_type",
			"green",
			"print (",
			"print",
			"extend",
			"LD",
			"ld",
			"LD",
			"ld",
			"LD",
			"ld",
			"LD",
			"ld",
			"LD",
			"ld",
			"warp",
			"ruler",
			" ",
			"vip64",
			" ",
			"pickle_dump",
			"dic0",
			"2384490",
			"1404855",
			"_dir",
			"=",
			"E:\\TEMP\\",
			",",
			"pickle_dump",
			"soultion_initialization",
			"pickle",
			"lat2",
			"lon1",
			"lat1",
			"cnt_improve",
			"'C",
			"[",
			"Large",
			"Family",
			"'M'",
			"print",
			"rand",
			"模拟退火",
			"print",
			"b",
			"a",
			"errType",
			"leafType",
			"createTree",
			"retTree",
			"bestFeature",
			"a",
			"x",
			"infogain",
			"infoGain",
			"bestInfoGain",
			"baseEntropy",
			"numFeatures",
			"subDataSet",
			"featList",
			"newEntropy",
			"uniqueVals",
			"splitDataSet",
			"calcShannonEnt",
			"featVec",
			"retDataSet",
			"DataSet",
			"dataSet",
			"under var",
			"citation",
			"b.",
			"0. ",
			" .",
			"Table",
			"table",
			"Table",
			"adp_var"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"$\\rm CO_2$",
			"．",
			".",
			"",
			"\n",
			"def parse_SQL_mra (yyyy,mm):\n    # parse SQL for checking published articles for given time\n    startdate = '\\\"'+ str(yyyy)+'-'+str(mm)+'-01'+'\\\"'\n    enddate = '\\\"'+ str(yyyy)+'-'+str(mm+1)+'-01'+'\\\"'\n    mrq_a = (\\\n        \"SELECT\\\n            submission_editors_rel.assigned_user_id AS Staff_ID,\\\n            CONCAT(users.firstname,' ',users.lastname) AS Staff_Name,\\\n            users.email AS 'Staff_E-Mail',\\\n            articles.journal_id AS Journal_ID,\\\n            journals.name_short AS Journal_Name, \\\n            special_issues.name AS SI_Name,\\\n            articles.submission_manuscript_id AS Manuscript_ID,\\\n            article_types.name AS Article_Type,\\\n            date(submission_manuscript_state.submission_date) AS Submission_Date,\\\n            articles.pubdate_received AS Received_Date,\\\n            articles.pubdate_published AS Published_Date,\\\n            articles.id_doi AS DOI,\\\n            CONCAT(journals.issn_electronic,'/',articles.volume,'/',articles.issue,'/',articles.firstpage) AS GA_PDF_index\\\n        FROM articles \\\n        LEFT JOIN journals ON journals.id = articles.journal_id \\\n        LEFT JOIN submission_manuscript ON articles.submission_manuscript_id = submission_manuscript.id \\\n        LEFT JOIN submission_editors_rel ON submission_editors_rel.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN users ON users.id = submission_editors_rel.assigned_user_id \\\n        LEFT JOIN submission_manuscript_state ON submission_manuscript_state.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN submission_manuscript_review ON submission_manuscript_review.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN article_types ON articles.article_type_id = article_types.id \\\n        LEFT JOIN special_issues ON articles.special_issue_id = special_issues.id \\\n        WHERE\\\n            articles.pubdate_published >= \"+ startdate + \"\\\n            AND articles.pubdate_published < \" + enddate + \"\\\n        GROUP BY\\\n            articles.id_doi\\\n        ORDER BY\\\n            articles.journal_id, articles.pubdate_published, articles.id_doi, submission_editors_rel.assigned_user_id\\\n        \")\n    return mrq_a\n\ndef parse_SQL_mrs (yyyy,mm):\n    # parse SQL for checking submitted ms under given time\n    startdate = '\\\"'+ str(yyyy)+'-'+str(mm)+'-01'+'\\\"'\n    enddate = '\\\"'+ str(yyyy)+'-'+str(mm+1)+'-01'+'\\\"'\n    mrqs = (\\\n        \"SELECT\\\n            CONCAT(users.firstname,' ',users.lastname) AS Assigned_Staff,\\\n            users.email AS 'Staff_E-Mail',\\\n            submission_manuscript.id AS MSID,\\\n            journals.id AS Journal_ID,\\\n            journals.name_short AS Journal_Name,\\\n            special_issues.name AS SI_Name,\\\n            DATE(submission_manuscript_state.submission_date) AS Submission_Date,\\\n            submission_status.description AS Submission_Status,\\\n            articles.pubdate_published AS Date_Published,\\\n            articles.id_doi AS DOI_Published\\\n        FROM submission_manuscript \\\n        LEFT JOIN `journals` ON submission_manuscript.journal_id = journals.id \\\n        LEFT JOIN `special_issues` ON submission_manuscript.special_issue_id = special_issues.id \\\n        LEFT JOIN `submission_manuscript_state` ON submission_manuscript_state.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN `articles` ON articles.submission_manuscript_id = submission_manuscript.id \\\n        LEFT JOIN `submission_status` ON submission_manuscript_state.status_id = submission_status.id \\\n        LEFT JOIN `submission_editors_rel` ON submission_editors_rel.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN `users` ON users.id = submission_editors_rel.assigned_user_id \\\n        WHERE \\\n            submission_manuscript_state.submission_date >= \" + startdate + \"\\\n            AND submission_manuscript_state.submission_date < \" + enddate + \"\\\n        ORDER BY\\\n            submission_manuscript.journal_id,\\\n            submission_manuscript_state.submission_date,\\\n            submission_status.description \\\n        \")\n    return mrqs\n\ndef parse_SQL_mrf (yyyy,mm):\n    # parse SQL for checking terminated submissions under given time\n    startdate = '\\\"'+ str(yyyy)+'-'+str(mm)+'-01'+'\\\"'\n    enddate = '\\\"'+ str(yyyy)+'-'+str(mm+1)+'-01'+'\\\"'\n    mrqf = (\\\n        \"SELECT\\\n            submission_editors_rel.assigned_user_id AS Staff_ID,\\\n            users.email AS 'Staff_E-Mail', \\\n            submission_manuscript.journal_id AS Journal_ID,\\\n            journals.name_short AS Journal_Name,\\\n            submission_manuscript.id AS Manuscript_ID,\\\n            article_types.name AS Article_Type,\\\n            submission_status.description AS Manuscript_Status,\\\n            DATE (submission_manuscript_state.submission_date) AS Date_Submission,\\\n            DATE (submission_manuscript_decisions.decision_date) AS Date_Decision,\\\n            submission_manuscript_decisions.decision AS Decision,\\\n            articles.pubdate_accepted AS Date_Accepted,\\\n            articles.pubdate_published AS Date_Published,\\\n            DATE (submission_manuscript_state.last_action) AS Date_Last_Action,\\\n            submission_manuscript_review.acceptance AS Review_Acceptance,\\\n            COUNT(*) AS Reviews_invited,\\\n            COUNT(if(submission_manuscript_review.acceptance = 1, TRUE, NULL)) AS Reviews_Accepted,\\\n            COUNT(if(submission_manuscript_review.acceptance = 0, TRUE, NULL)) AS Reviews_Declined,\\\n            COUNT(DISTINCT submission_reviewers.email) AS Uniq_Reviewers,\\\n            COUNT(DISTINCT IF (submission_manuscript_review.acceptance = 1,submission_reviewers.email,NULL )) AS Uniq_Accepted_Reviewers,\\\n            COUNT(DISTINCT IF (submission_manuscript_review.acceptance = 1,submission_reviewers.email,NULL ))/COUNT(DISTINCT submission_reviewers.email) AS Acception_Rate,\\\n            CONCAT (MONTH(submission_manuscript_state.last_action),'-',YEAR(submission_manuscript_state.last_action)) AS Month \\\n        FROM submission_manuscript\\\n        LEFT JOIN submission_manuscript_state ON submission_manuscript.hash_key = submission_manuscript_state.hash_key \\\n        LEFT JOIN submission_status ON submission_manuscript_state.status_id = submission_status.id \\\n        LEFT JOIN submission_manuscript_review ON submission_manuscript.hash_key = submission_manuscript_review.hash_key \\\n        LEFT JOIN submission_reviewers_rel ON submission_manuscript_review.reviewer_rel_id = submission_reviewers_rel.id \\\n        LEFT JOIN submission_reviewers ON submission_reviewers_rel.reviewer_id = submission_reviewers.id \\\n        LEFT JOIN submission_manuscript_decisions ON submission_manuscript.hash_key = submission_manuscript_decisions.hash_key \\\n        LEFT JOIN articles ON articles.submission_manuscript_id = submission_manuscript.id \\\n        LEFT JOIN journals ON journals.id = submission_manuscript.journal_id \\\n        LEFT JOIN article_types ON articles.article_type_id = article_types.id \\\n        LEFT JOIN submission_editors_rel ON submission_editors_rel.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN users ON users.id = submission_editors_rel.assigned_user_id \\\n        WHERE \\\n            (submission_manuscript_state.status_id = 29 \\\n                AND (articles.pubdate_published >= \" + startdate + \" AND articles.pubdate_published < \" + enddate + \")) \\\n            OR ((DATE (submission_manuscript_state.last_action)>= \" + startdate + \" \\\n                AND DATE (submission_manuscript_state.last_action) < \" + enddate + \") \\\n                AND submission_manuscript_state.status_id in (19,102))\\\n        GROUP BY submission_manuscript.id\\\n        ORDER BY journals.id, submission_manuscript_state.status_id, submission_manuscript_state.last_action\\\n        \")\n    return mrqf\n\ndef parse_SQL_search_published (email,date0,date1):\n    # 这个有问题\n    startdate = '\\\"'+ date0[0:4]+'-'+ date0[4:6] + '-' + date0[6:8] + '\\\"'\n    enddate = '\\\"'+ date1[0:4]+'-'+ date1[4:6] + '-' + date1[6:8] + '\\\"'\n    e_mail = '\\\"' + email + '\\\"'\n    sql = (\\\n        \"SELECT \\\n            authors.email, \\\n            articles.journal_id AS Journal_ID,\\\n            journals.name_short AS Journal_Name, \\\n            special_issues.name AS SI_Name,\\\n            articles.submission_manuscript_id AS Manuscript_ID,\\\n            article_types.name AS Article_Type,\\\n            date(submission_manuscript_state.submission_date) AS Submission_Date,\\\n            articles.pubdate_received AS Received_Date,\\\n            articles.pubdate_published AS Published_Date,\\\n            articles.id_doi AS DOI,\\\n            CONCAT(journals.issn_electronic,'/',articles.volume,'/',articles.issue,'/',articles.firstpage) AS GA_PDF_index\\\n        From \\\n            articles \\\n        LEFT JOIN journals ON journals.id = articles.journal_id \\\n        LEFT JOIN submission_manuscript ON articles.submission_manuscript_id = submission_manuscript.id \\\n        LEFT JOIN submission_editors_rel ON submission_editors_rel.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN users ON users.id = submission_editors_rel.assigned_user_id \\\n        LEFT JOIN submission_manuscript_state ON submission_manuscript_state.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN submission_manuscript_review ON submission_manuscript_review.hash_key = submission_manuscript.hash_key \\\n        LEFT JOIN article_types ON articles.article_type_id = article_types.id \\\n        LEFT JOIN special_issues ON articles.special_issue_id = special_issues.id \\\n        LEFT JOIN authors ON articles.id = authors.articles_id \\\n        WHERE\\\n            authors.email LIKE \" + e_mail + \"\\\n            AND articles.pubdate_published >= \"+ startdate + \"\\\n            AND articles.pubdate_published < \" + enddate + \"\\\n        GROUP BY\\\n            articles.id_doi\\\n        ORDER BY\\\n            articles.journal_id, articles.pubdate_published, articles.id_doi \\\n        \")\n\ndef parse_SQL_EBMxJournal ():\n    sql = \"\"\"SELECT\n    editors_roles.rolename AS Role_Name,\n    journals.id AS Journal_ID,\n    journals.name_short AS Journal_Name,\n    editors_boards.section_id AS Section_ID,\n    sections.name_system AS Section_Name,\n    special_issues.id AS SI_ID,\n    special_issues.name AS SI_Name,\n    editors.email AS Editor_EMail,\n    CONCAT (editors.firstname, \" \",editors.lastname) AS Editor_Name,\n    editors.country,\n    editors.affiliation\n    FROM editors\n    LEFT JOIN editors_rel on editors_rel.editor_id = editors.id\n    LEFT JOIN editors_roles on editors_roles.id = editors_rel.role_id\n    LEFT JOIN editors_boards on editors_boards.id = editors_rel.board_id\n    LEFT JOIN journals on journals.id = editors_boards.journal_id\n    LEFT JOIN special_issues on special_issues.id = editors_boards.special_issue_id\n    LEFT JOIN sections on sections.id = editors_boards.section_id\n    WHERE\n        editors_roles.rolename is not null\n        AND journals.name_short is not null\n    ORDER BY\n        journals.id, editors_roles.rolename, editors.email; \"\"\"\n    return sql\n\ndef parse_SQL_CheckAuthors ():\n    # Query author of published during the given period\n    sql = \"\"\"SELECT\n        articles.id AS Article_WebID,\n        articles.journal_id AS Journal_ID,\n        journals.name_short AS Journal_Name,\n        articles.special_issue_id AS SI_ID,\n        special_issues.name AS SI_Name,\n        articles.submission_manuscript_id AS MS_ID,\n        article_types.name AS Ariticle_Type,\n        articles.manuscript_id AS MS_ID,\n        articles.id_doi AS DOI,\n        articles.pubdate_published AS Date_Published,\n        CONCAT(authors.given_names,\" \",authors.lastname) AS Author_Name,\n        authors.email AS \"Author_E-Mail\"\n        -- authors.correspondence AS Correspondence,\n        -- authors.affiliation AS Aff_Index,\n        -- affiliations.number AS Aff_Number,\n        -- affiliations.region AS Region,\n        -- affiliations.name AS Affliation\n        FROM articles\n        LEFT JOIN journals ON articles.journal_id = journals.id\n        LEFT JOIN special_issues ON articles.special_issue_id = special_issues.id\n        LEFT JOIN authors ON articles.id = authors.article_id\n        LEFT JOIN article_types ON article_type_id = article_types.id\n        LEFT JOIN sections ON sections.id = articles.section_id\n        -- LEFT JOIN affiliations ON affiliations.article_id = articles.id\n        -- LEFT JOIN country ON affiliations.country = country.id\n        WHERE\n            -- articles.journal_id = 1\n            -- AND articles.section_id =25\n            -- AND authors.correspondence = 1\n            articles.pubdate_published >= \"2014-01-01\"\n            AND articles.pubdate_published < \"2014-05-01\"\n            -- country.id = 240\n        ORDER BY\n            articles.pubdate_published\"\"\"\n    return sql\n\ndef parse_SQL_CheckSI ():\n    sql = \"\"\"SELECT\n        special_issues.id AS SI_ID,\n        special_issues.section_id AS Section_ID,\n        special_issues.journal_id AS Journal_ID,\n        journals.name_short AS Journal_Name,\n        special_issues.name AS SI_Name,\n        special_issues.date_added AS Established_Date,\n        special_issues.submission_deadline AS Submission_Deadline\n        FROM special_issues\n        LEFT JOIN journals ON special_issues.journal_id = journals.id\n        WHERE\n            special_issues.date_added >= '2014-01-01'\n            AND special_issues.date_added < '2014-05-01'\"\"\"\n    return sql\n\ndef parse_SQL_CheckReviews ():\n    sql = \"\"\"SELECT\n        submission_manuscript.id AS Manuscript_ID,\n        submission_manuscript.journal_id AS Journal_ID,\n        submission_manuscript_state.status_id AS Manuscript_Statis_ID,\n        DATE (submission_manuscript_review.signatures_date_review) AS Review_Date,\n        submission_status.description AS Status_Description,\n        submission_manuscript_state.hash_key,\n        submission_manuscript_review.reviewer_rel_id AS Reviewers_Rel_ID,\n        submission_reviewers_rel.reviewer_id AS Reviewer_ID,\n        CONCAT (submission_reviewers.firstname,\" \",submission_reviewers.lastname) AS Reviewer_Name,\n        submission_reviewers.email AS Reviewer_Email,\n        submission_reviewers.affiliation AS Affiliation,\n        length (submission_manuscript_review.comments_authors)\n    FROM submission_manuscript\n        LEFT JOIN submission_manuscript_state ON submission_manuscript.hash_key = submission_manuscript_state.hash_key\n        LEFT JOIN submission_status ON submission_manuscript_state.status_id = submission_status.id\n        LEFT JOIN submission_manuscript_review ON submission_manuscript.hash_key = submission_manuscript_review.hash_key\n        LEFT JOIN submission_reviewers_rel ON submission_manuscript_review.reviewer_rel_id = submission_reviewers_rel.id\n        LEFT JOIN submission_reviewers ON submission_reviewers_rel.reviewer_id = submission_reviewers.id\n    WHERE\n        submission_manuscript.id is not NULL\n        AND submission_manuscript_review.acceptance = 1\n        AND length (submission_manuscript_review.comments_authors) > 0\n        AND DATE (submission_manuscript_review.signatures_date_review) >= \"2014-01-01\"\n        AND DATE (submission_manuscript_review.signatures_date_review) < \"2014-05-01\"\n    ORDER BY Review_Date, submission_manuscript.id;\"\"\"\n    return sql\n\ndef query_SQL (dbconncfg,querySQL):\n    import mysql.connector\n    conn = mysql.connector.connect(\\\n        user = dbconncfg['user'], password = dbconncfg['password'],\\\n        host = dbconncfg['host'], port = dbconncfg['port'], \\\n        database = dbconncfg['database'])\n    cursor = conn.cursor()\n    query = (querySQL)\n    cursor.execute(query)\n    RES = []\n    for i in cursor:\n        RES.append(i)\n    cursor.close()\n    conn.close()\n    return RES\n\ndef query_SQL2 (dbconncfg,querySQL):\n    import mysql.connector\n    conn = mysql.connector.connect(\\\n        user = dbconncfg['user'], password = dbconncfg['password'],\\\n        host = dbconncfg['host'], port = dbconncfg['port'], \\\n        database = dbconncfg['database'])\n    cursor = conn.cursor()\n    query = (querySQL)\n    cursor.execute(query)\n    return (cursor)\n\ndef mra2dict (L):\n    HEAD = ['Staff_ID','Staff_Name','Staff_E-Mail','Journal_ID',\\\n        'Journal_Name','SI_Name','Manuscript_ID','Article_Type',\\\n        'Submission_Date','Received_Date','Published_Date','DOI','GA_PDF_index']\n    def fillzero (s1,lenth):\n        if len(s1)<lenth:\n            s1 = '0'*(lenth-len(s1)) + s1\n        return (s1)\n    def date2str (date):\n        str_yyyy = fillzero(str(date.year),4)\n        str_mm = fillzero(str(date.month),2)\n        str_dd = fillzero(str(date.day),2)\n        str_date = str_dd+'-'+str_mm+'-'+str_yyyy\n        return str_date\n    def make_d (l):\n        import datetime\n        d = {}\n        for i in range(len(l)):\n            if type(l[i]) is datetime.date:\n                record = date2str(l[i])\n            else:\n                record = l[i]\n            d.update({HEAD[i]:record})\n        return d\n    D = {}\n    for i in range(len(L)):\n        D.update({i+1:make_d(L[i])})\n    return D\n\ndef get_uniq (T,index):\n    uniq = []\n    for i in T:\n        if i[index] not in uniq:\n            uniq.append(i[index])\n    return uniq\n\ndef get_name (editor,QED):\n    name = ''\n    for rec in QED:\n        if rec[7] == editor:\n            name = rec[8]\n            break\n    return name\n\ndef check_editor_J (editor,QED):\n    ed_J = []\n    for rec in QED:\n        if rec[7] == editor:\n            ed_J.append(rec[2])\n    ed_J_uniq = list(set(ed_J))\n    numJ = len(ed_J_uniq)\n    return (numJ,ed_J_uniq)\n\ndef check_pub (editor,QED_A):\n    ed_Pub = []\n    for rec in QED_A:\n        if rec[11] == editor:\n            ed_Pub.append(rec[8])\n    numPub = len(ed_Pub)\n    return (numPub,ed_Pub)\n\ndef check_SI (editor,QED,QED_SI):\n    SI = []\n    avai_SI = get_uniq(QED_SI,0)\n    for rec in QED:\n        if rec[7] == editor and rec[5] in avai_SI:\n            SI.append(rec[6])\n    num_SI = len(SI)\n    return (num_SI,SI)\n\ndef check_reviews (editor, QED_R):\n    rvws = []\n    for rec in QED_R:\n        if rec[9] == editor:\n            rvws.append(rec[0])\n    num_rvw = len(rvws)\n    return (num_rvw,rvws)\n\n# TEST\nprint (\"EBM Evaluation\")\nprint (\"SEIKA 2014\\n\")\n",
			"2",
			"",
			"D_Text['Y_label'] = \"Total APC Invoice (CHF)\"",
			"Total APC Invoice (CHF)",
			"Total APC Invoice Sent by Individual (January 2014)",
			"Average Article Processing Days by Individual (January 2014)",
			"article processing",
			"\"MX\""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tensorflow_manual_cn.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3932,
						"regions":
						{
						},
						"selection":
						[
							[
								478,
								478
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 72.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "get_started/sec_1_3_basic_usage.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19899,
						"regions":
						{
						},
						"selection":
						[
							[
								805,
								805
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 196.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 28.0
	},
	"pinned_build_system": "Packages/LaTeXTools/LaTeX.sublime-build",
	"project": "tensorflow_manual_translation.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sec_1_3",
				"tex\\get_started\\sec_1_3_basic_usage.tex"
			],
			[
				"",
				"Statistical Analyst/Senior Statistical Analyst/Sta"
			],
			[
				"d",
				"D:\\Dropbox\\Python.Works\\GA.prj\\GA_doi.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 599.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pac",
				"D:\\SEIKA.sync\\Python.Works\\machine_learning_in_action\\seika_ml_in_action.sublime-workspace"
			],
			[
				"",
				"D:\\SEIKA_sync\\Python.Works\\seika_scriber\\seika_scriber.sublime-project"
			]
		],
		"width": 455.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 170.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
